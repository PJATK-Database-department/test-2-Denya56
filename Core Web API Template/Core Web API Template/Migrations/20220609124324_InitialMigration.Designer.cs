// <auto-generated />
using System;
using Core_Web_API_Template.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core_Web_API_Template.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    [Migration("20220609124324_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core_Web_API_Template.Models.CityDict", b =>
                {
                    b.Property<int>("IdCityDict")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCityDict"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdCityDict");

                    b.ToTable("CityDicts");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Flight", b =>
                {
                    b.Property<int>("IdFlight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFlight"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCityDict")
                        .HasColumnType("int");

                    b.Property<int>("IdPlane")
                        .HasColumnType("int");

                    b.HasKey("IdFlight");

                    b.HasIndex("IdCityDict");

                    b.HasIndex("IdPlane");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Flight_Passenger", b =>
                {
                    b.Property<int>("IdFlight")
                        .HasColumnType("int");

                    b.Property<int>("IdPassenger")
                        .HasColumnType("int");

                    b.HasKey("IdFlight", "IdPassenger");

                    b.HasIndex("IdPassenger");

                    b.ToTable("Flight_Passengers");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Passenger", b =>
                {
                    b.Property<int>("IdPassenger")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPassenger"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassportNum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdPassenger");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Plane", b =>
                {
                    b.Property<int>("IdPlane")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlane"), 1L, 1);

                    b.Property<int>("MaxSeats")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPlane");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Flight", b =>
                {
                    b.HasOne("Core_Web_API_Template.Models.CityDict", "CityDict")
                        .WithMany("Flights")
                        .HasForeignKey("IdCityDict")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core_Web_API_Template.Models.Plane", "Plane")
                        .WithMany("Flights")
                        .HasForeignKey("IdPlane")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityDict");

                    b.Navigation("Plane");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Flight_Passenger", b =>
                {
                    b.HasOne("Core_Web_API_Template.Models.Flight", "Flight")
                        .WithMany("Flight_Passengers")
                        .HasForeignKey("IdFlight")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core_Web_API_Template.Models.Passenger", "Passenger")
                        .WithMany("Flight_Passengers")
                        .HasForeignKey("IdPassenger")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.CityDict", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Flight", b =>
                {
                    b.Navigation("Flight_Passengers");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Passenger", b =>
                {
                    b.Navigation("Flight_Passengers");
                });

            modelBuilder.Entity("Core_Web_API_Template.Models.Plane", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
